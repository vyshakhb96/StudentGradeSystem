@model StudentGradingSystem.Models.Student
@using StudentLibraries.Enum;
@{ 

}
<form id="dataDemo" name="dataForm">
    <div class="modal-header">
        <h1 class="modal-title" id="ViewModalLabel">VIEW STUDENT</h1>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
    <div class="modal-body">
        <span class="alert-danger">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        </span>

        @Html.HiddenFor(model => model.Id)
        <div class="form-group">
            @Html.LabelFor(model => model.Regnum, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="space">
                @Html.EditorFor(model => model.Regnum, new { htmlAttributes = new { @disabled = "disabled", @class = "form-control", @Id = "reg" } })
                @Html.ValidationMessageFor(model => model.Regnum, "", new { @class = "text-danger", @id = "regSpan" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="space">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @disabled = "disabled", @class = "form-control", @Id = "name" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger", @Id = "spanName" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Dob, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="space">
                @Html.EditorFor(model => model.Dob, new { htmlAttributes = new { @type = "text", @disabled = "disabled", @class = "form-control", @Id = "dob" } })
                @Html.ValidationMessageFor(model => model.Dob, "", new { @class = "text-danger", @Id = "spanDob" })
            </div>

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Standard, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="space">
                <select class="form-control" name="Standard" id="Standard" disabled>
                    <option value="">--Select--</option>
                    <option value="Plus One">Plus One</option>
                    <option value="Plus Two">Plus Two</option>
                </select>
                @Html.ValidationMessageFor(model => model.Standard, "", new { @class = "text-danger", @Id = "spanStandard" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Mathematics, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="space">
                @Html.EditorFor(model => model.Mathematics, new { htmlAttributes = new { @disabled = "disabled", @class = "form-control", @Id = "maths", min = "0", max = "100" } })
                @Html.ValidationMessageFor(model => model.Mathematics, "", new { @class = "text-danger", @Id = "spanMaths" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Physics, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="space">
                @Html.EditorFor(model => model.Physics, new { htmlAttributes = new { @disabled = "disabled", @class = "form-control", @Id = "physics", min = "0", max = "100" } })
                @Html.ValidationMessageFor(model => model.Physics, "", new { @class = "text-danger", @Id = "spanPhysics" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Chemistry, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="space">
                @Html.EditorFor(model => model.Chemistry, new { htmlAttributes = new { @disabled = "disabled", @class = "form-control", @Id = "chemistry", min = "0", max = "100" } })
                @Html.ValidationMessageFor(model => model.Chemistry, "", new { @class = "text-danger", @Id = "spanChemistry" })
            </div>
        </div>
    </div>
    <div class="modal-footer">

        <button type="button" id="btnEdit" class="btn btn-warning" onclick="enable()">Edit</button>
        <button type="button" id="btnSave" style="display:none" class="btn btn-primary" onclick="CreateOrUpdate()">Save</button>
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
    </div>

</form>

<script>
    $(document).ready(function () {
        var Standard = '@ViewData["Standard"].ToString()';
        $("#Standard").val(Standard);

        var operation = '@Model.ActionType.ToString()';
        if (operation == '@Operations.Add') {
            $('.form-control').attr('disabled', false);
        }
        else if (operation == '@Operations.Edit') {
            $('.form-control').attr('disabled', true);
    }
    });
    $("#Standard").change(function () {
        var stud = $("#Standard").val();
        $("#Standard").val(stud);

    });


</script>
